---
name: cpp_build_ubuntu

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - 'cpp/**'
      - '.github/workflows/cpp_build_ubuntu.yml'
  pull_request:
  schedule:
    - cron: '20 0 1,10,20 * 0'

env:
  build_path: ${{github.workspace}}/cpp/build

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        compiler:
          - g++-8
          - g++-9
          - g++-10
          - g++-11
          - clang++-9
          - clang++-10
          - clang++-11
          - clang++-12
        build_type: [Release, Debug]
        exclude:
          - os: ubuntu-22.04
            compiler: g++-8
          - os: ubuntu-22.04
            compiler: clang++-9
          - os: ubuntu-22.04
            compiler: clang++-10

    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608  # v4

      - name: Install ${{matrix.compiler}}
        if: ${{ matrix.compiler != 'clang++-12' }}
        run: |
          sudo apt-get update
          sudo apt-get install ${{matrix.compiler}}

      - name: Display versions
        run: |
          ${{matrix.compiler}} --version
          cmake --version

      - name: Install boost
        run: |
          sudo apt-get install libboost-all-dev

      - name: Display boost version
        run: |
          dpkg -s libboost-dev | grep Version

      - name: Create Build Environment
        run: cmake -E make_directory ${{env.build_path}}

      - name: Configure CMake
        shell: bash
        working-directory: ${{env.build_path}}
        run: >
          cmake ../
          -D CMAKE_BUILD_TYPE=${{matrix.build_type}}
          -D CMAKE_CXX_COMPILER=${{matrix.compiler}}

      - name: Build with ${{matrix.compiler}}
        working-directory: ${{env.build_path}}
        shell: bash
        run: cmake --build . --config ${{matrix.build_type}}

      - name: Test
        working-directory: ${{env.build_path}}
        shell: bash
        run: ctest -C ${{matrix.build_type}}
...
