---
name: sonar_cloud_check

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:

jobs:
  sonarcloud:
    name: Build (sonarCloud)
    runs-on: ubuntu-latest
    env:
      BUILD_PATH: "cpp/build"
      SONAR_SERVER_URL: "https://sonarcloud.io"
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory
    steps:
      - name: Checkout
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
        with:
          fetch-depth: 0

      - name: Install boost
        run: |
          sudo apt-get update
          sudo apt-get install libboost-all-dev

      - name: Install g++-10
        run: |
          sudo apt-get install g++-10

      - name: Set up Python ${{matrix.python-version}}
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install gcovr
        shell: bash
        run: |
          python -m pip install --upgrade pip
          sudo pip install git+https://github.com/gcovr/gcovr.git

      - name: Install sonar-scanner and build-wrapper
        uses: sonarsource/sonarcloud-github-c-cpp@v2

      - name: Run build-wrapper
        run: |
          mkdir ${{ env.BUILD_PATH }}
          cmake \
            -S cpp/ \
            -B ${{ env.BUILD_PATH }} \
            -D CMAKE_BUILD_TYPE=Debug \
            -D CMAKE_CXX_COMPILER=g++-10
          build-wrapper-linux-x86-64 \
            --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} \
          cmake --build ${{ env.BUILD_PATH }} --config Debug

      - name: Generate coverage data xml report
        run: |
          cd cpp/scripts
          ./generate_raw_coverage_data_gxx.sh
          ./run_gcovr_sonarqube.sh

      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        # yamllint disable rule:line-length
        run: >
          sonar-scanner
          --define sonar.host.url="${{ env.SONAR_SERVER_URL }}"
          --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"
        # yamllint enable rule:line-length
